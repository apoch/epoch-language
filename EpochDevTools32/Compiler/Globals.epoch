//
// Global state (just a hack while we bootstrap!)
//

global
{

	//
	// This stuff is fairly clean and written to use the newest language/compiler features
	//
	
	Namespace GlobalRootNamespace =
		0,
		nothing,
		BinaryTreeRoot<Scope>(nothing),
		BinaryTreeRoot<SumType>(nothing),
		BinaryTreeRoot<TypeAlias>(nothing),
		BinaryTreeRoot<TypeAlias>(nothing),
		BinaryTreeRoot<StructureDefinition>(nothing),
		BinaryTreeRoot<FunctionSignature>(nothing),
		nothing,
		BinaryTreeRoot<FunctionDefinition>(nothing),
		BinaryTreeRoot<Overload>(nothing),
		BinaryTreeRoot<TypeMatcher>(nothing),
		BinaryTreeRoot<TemplateFunction>(nothing),
		BinaryTreeRoot<TemplateStructure>(nothing),
		BinaryTreeRoot<TemplateSumType>(nothing),
		BinaryTreeRoot<TemplateInstance>(nothing),
		BinaryTreeRoot<TemplateInstance>(nothing),
		BinaryTreeRoot<TemplateInstance>(nothing)


	StringPool GlobalStringPool =
		BinaryTreeRoot<string>(nothing),
		Trie(0, nothing, 0),
		0
		
		
	ThunkTable GlobalThunkTable = nothing, 0, 0, 0
	
	BinaryTreeRoot<integer> LLVMGlobalThunks = nothing


	// Remaining contents are largely hacky
	
	
	BinaryTreeRoot<LLVMFunctionRef> LLVMFunctionTable = nothing
	BinaryTreeRoot<LLVMType> LLVMStructureTypeTable = nothing
	BinaryTreeRoot<LLVMFunctionType> LLVMFunctionSignatureTable = nothing
	BinaryTreeRoot<LLVMType> LLVMSumTypeTable = nothing
	BinaryTreeRoot<LLVMType> LLVMArrayTypeTable = nothing
	BinaryTreeRoot<LLVMGlobalVar> LLVMGlobalTable = nothing
	
	BinaryTreeRoot<integer> GlobalStringOffsets = nothing

	BinaryTreeRoot<CallSiteMetadata> TypeMatcherCallSiteMetadata = nothing
	
	Variable dummyvar = 0, 0, 0, 0

	Overload dummyoverload = 0, 0, nothing
	list<Overload> dummyoverloadlist = dummyoverload, nothing
	list<Overload> AutoGenOverloads = dummyoverload, nothing

	FunctionDefinition dummyfunc = 0, 0, nothing, nothing, nothing, dummyoverloadlist, ContextWrapper<Scope>(nothing), "", 0, false, false, false
	list<FunctionDefinition> Functions = dummyfunc, nothing


	StructureMemberVariable dummymember = 0, 0, 0, nothing
	list<StructureMember> dummymembers = dummymember, nothing
	StructureDefinition dummystruct = 0, 0, 0, 0, 0, dummymembers, 0, "", false
	list<StructureDefinition> Structures = dummystruct, nothing
	list<StructureDefinition> DependencyStructures = dummystruct, nothing


	// TODO - convert to an enumeration
	integer STACK_TYPE_GLOBAL = 0
	integer STACK_TYPE_FUNCTION = 1
	integer STACK_TYPE_CODEBLOCK = 2
	integer STACK_TYPE_STATEMENT = 3
	integer STACK_TYPE_ASSIGNMENT = 4
	integer STACK_TYPE_TYPEMATCH = 5
	integer STACK_TYPE_SUBSTATEMENT = 6
	integer STACK_TYPE_FUNCRET = 7
	integer STACK_TYPE_ENTITY_PARAM = 8
	integer STACK_TYPE_ENTITY_CODE = 9
	integer STACK_TYPE_CHAIN = 10
	integer STACK_TYPE_PARENTHETICAL = 11
	integer STACK_TYPE_MESSAGE = 12
	integer STACK_TYPE_TASK = 13
	integer STACK_TYPE_ARRAYINDEX = 14

	ContextStackEntry GlobalStackEntry = STACK_TYPE_GLOBAL, 0
	list<ContextStackEntry> ContextStack = GlobalStackEntry, nothing

	AtomSentinel dummysentinel = 0
	list<ExpressionAtom> dummyatomlist = dummysentinel, nothing
	Expression dummyexpression = dummyatomlist, 0
	list<Expression> ScratchExpressions = dummyexpression, nothing
	
	Statement dummystatement = 0, nothing, 0, nothing, false, false, 0, false
	list<Statement> SubStatements = dummystatement, nothing

	Parameter dummyparam = 0, 0
	list<Parameter> dummyparamlist = dummyparam, nothing
	FunctionSignature dummysignature = 0, dummyparamlist, 0, false
	list<FunctionSignature> dummysignaturelist = dummysignature, nothing
	TypeMatcher dummytypematch = 0, dummysignaturelist
	list<TypeMatcher> TypeMatchers = dummytypematch, nothing

	Entity dummyentity = 0, 0, nothing, nothing
	list<Entity> EntityStack = dummyentity, nothing

	list<OptionalCodeBlock> CurrentCodeBlockStack = nothing, nothing

	list<CodeBlockEntry> dummyblockentries = dummystatement, nothing
	CodeBlock GlobalCodeBlock = dummyblockentries
	integer GlobalCodeBlockName = 0

	list<Entity> chaincontents = dummyentity, nothing
	EntityList foo = chaincontents
	EntityChain dummychain = foo
	list<EntityChain> ChainStack = dummychain, nothing


	simplelist<integer> AutoGeneratedFunctionNames = 0, nothing
	simplelist<integer> CustomConstructors = 0, nothing

	list<FunctionSignature> FunctionSignatures = dummysignature, nothing

	boolean InFuncRetHack = false
	ContextWrapper<Statement> LastTopLevelStatementHack = nothing

	simplelist<integer> scratchpossibletypes = 0, nothing
	TypePossibilityList scratchreturns = scratchpossibletypes, false
	TypePossibilityList scratchparams = scratchpossibletypes, false
	list<TypePossibilityList> scratchparampossibles = scratchparams, nothing
	InferencePossibility scratchpossibility = 0, scratchparampossibles, scratchreturns

	PendingTypeMatcher dummypending = 0, 0, nothing
	list<PendingTypeMatcher> PendingTypeMatchers = dummypending, nothing

	BTPayloadWrap<PendingTypeMatcher> tmwewrap = dummypending
	BinaryTree<PendingTypeMatcher> TypeMatchersWhichExist = 0, tmwewrap, nothing, nothing, -1
	BinaryTree<PendingTypeMatcher> TypeMatchersWhichExistByMatcherName = 0, tmwewrap, nothing, nothing, -1

	PendingPatternMatcher dummypatternpending = 0, 0, 0
	list<PendingPatternMatcher> PendingPatternMatchers = dummypatternpending, nothing

	ParsedToken DummyParsedToken = "", "", 0, 0
	list<ParsedToken> TokenStream = DummyParsedToken, nothing
	tailhack TokenStreamTail = TokenStream

	TemplateParameter scratchtemplateparam = 0, 0
	list<TemplateParameter> TemplateParameterQueue = scratchtemplateparam, nothing

	list<TemplateParameter> dummytemplateparams = scratchtemplateparam, nothing
	TemplateFunction dummyfunctemplate = 0, dummytemplateparams
	list<TemplateFunction> TemplateFunctions = dummyfunctemplate, nothing

	TemplateArgument scratchtemplatearg = 0, ""
	list<TemplateArgument> scratchtemplateargs = scratchtemplatearg, nothing
	TemplateArgumentList scratchtemplatearglist = scratchtemplateargs
	list<TemplateArgumentList> ScratchTemplateArgumentStack = scratchtemplatearglist, nothing

	TemplateInstance dummytemplateinst = 0, 0, scratchtemplateargs
	list<TemplateInstance> TemplateFunctionInstances = dummytemplateinst, nothing
	list<TemplateInstance> TemplateStructureInstances = dummytemplateinst, nothing
	list<TemplateInstance> TemplateSumTypeInstances = dummytemplateinst, nothing

	TemplateStructure dummystructuretemplate = 0, dummytemplateparams
	list<TemplateStructure> TemplateStructures = dummystructuretemplate, nothing

	TemplateSumType dummysumtypetemplate = 0, dummytemplateparams
	list<TemplateSumType> TemplateSumTypes = dummysumtypetemplate, nothing

	simplelist<integer> dummycompound = 0, nothing
	PreOpStatement PreOpOnDeck = 0, dummycompound, 0
	PostOpStatement PostOpOnDeck = 0, dummycompound, 0


	ContextWrapper<Scope> gcdscopewrap = nothing
	ContextWrapper<FunctionDefinition> gcdfuncwrap = nothing
	InferenceContext DummyContextForFunctions = 0, 0, dummycompound, false, 0, false, false, gcdscopewrap, gcdfuncwrap

	simplelist<integer> globalemptyintlist = 0, nothing

	integer CHARACTER_CLASS_WHITE = 0
	integer CHARACTER_CLASS_IDENTIFIER = 1
	integer CHARACTER_CLASS_PUNCTUATION = 2
	integer CHARACTER_CLASS_COMMENT = 3
	integer CHARACTER_CLASS_PUNCTUATION_COMPOUND = 4
	integer CHARACTER_CLASS_STRING_LITERAL = 5
	integer CHARACTER_CLASS_LITERAL = 6

	integer GlobalStructureCounter = 0x03000000
	integer GlobalWeakAliasCounter = 0x04000000
	integer GlobalAliasCounter = 0x05000000
	integer GlobalSumTypeCounter = 0x07000000
	integer GlobalTemplateInstanceCounter = 0x08000000
	integer GlobalFunctionTypeCounter = 0x09000000
	integer GlobalArrayTypeCounter = 0x0a000000

	integer GlobalNothingCounter = 0

	integer PooledStringHandleForBoolean = 0
	integer PooledStringHandleForInteger = 0
	integer PooledStringHandleForInteger16 = 0
	integer PooledStringHandleForString = 0
	integer PooledStringHandleForReal = 0
	integer PooledStringHandleForBuffer = 0
	integer PooledStringHandleForNothing = 0
	integer PooledStringHandleForIdentifier = 0
	integer PooledStringHandleForAnonymousRet = 0
	integer PooledStringHandleForAssignment = 0
	integer PooledStringHandleForCast = 0
	integer PooledStringHandleForMemberAccess = 0
	integer PooledStringHandleForSubstringWithLength = 0
	integer PooledStringHandleForSubstringNoLength = 0
	integer PooledStringHandleForUnescape = 0
	integer PooledStringHandleForUnaryNot = 0
	integer PooledStringHandleForUnaryNotBoolean = 0
	integer PooledStringHandleForIncrementAssign = 0
	integer PooledStringHandleForIncrementAssignInteger = 0
	integer PooledStringHandleForDecrementAssign = 0
	integer PooledStringHandleForDecrementAssignInteger = 0
	integer PooledStringHandleForEquality = 0
	integer PooledStringHandleForInequality = 0
	integer PooledStringHandleForGreaterThan = 0
	integer PooledStringHandleForLessThan = 0
	integer PooledStringHandleForBooleanAnd = 0
	integer PooledStringHandleForBitwiseAnd = 0
	integer PooledStringHandleForStringConcat = 0
	integer PooledStringHandleForPlus = 0
	integer PooledStringHandleForMinus = 0
	integer PooledStringHandleForMultiply = 0
	integer PooledStringHandleForDivide = 0
	integer PooledStringHandleForEqualityInteger = 0
	integer PooledStringHandleForEqualityInteger16 = 0
	integer PooledStringHandleForEqualityBoolean = 0
	integer PooledStringHandleForEqualityReal = 0
	integer PooledStringHandleForEqualityString = 0
	integer PooledStringHandleForInequalityInteger = 0
	integer PooledStringHandleForInequalityBoolean = 0
	integer PooledStringHandleForInequalityString = 0
	integer PooledStringHandleForGreaterThanInteger = 0
	integer PooledStringHandleForLessThanInteger = 0
	integer PooledStringHandleForPrePostIncrementInteger = 0
	integer PooledStringHandleForWriteBuffer = 0
	integer PooledStringHandleForWriteBufferString = 0
	integer PooledStringHandleForWriteBufferMultiple = 0
	integer PooledStringHandleForWriteBufferReal = 0
	integer PooledStringHandleForSubstring = 0
	integer PooledStringHandleForPassTest = 0
	integer PooledStringHandleForAssert = 0
	integer PooledStringHandleForPrint = 0
	integer PooledStringHandleForNarrowString = 0
	integer PooledStringHandleForCastBooleanToInteger = 0
	integer PooledStringHandleForCastRealToInteger = 0
	integer PooledStringHandleForCastRealToString = 0
	integer PooledStringHandleForCastStringToReal = 0
	integer PooledStringHandleForCastIntegerToString = 0
	integer PooledStringHandleForCastStringToInteger = 0
	integer PooledStringHandleForWidenFromPtr = 0
	integer PooledStringHandleForLength = 0
	integer PooledStringHandleForCastIntegerToInteger16 = 0
	integer PooledStringHandleForCastInteger16ToInteger = 0
	integer PooledStringHandleForCmdLineGet = 0
	integer PooledStringHandleForCmdLineGetCount = 0
	integer PooledStringHandleForCmdLineIsValid = 0
	integer PooledStringHandleForPrePostDecrementInteger = 0
	integer PooledStringHandleForPrePostDecrement = 0
	integer PooledStringHandleForPrePostIncrement = 0
	integer PooledStringHandleForDivideInteger = 0
	integer PooledStringHandleForMultiplyInteger = 0
	integer PooledStringHandleForMinusInteger = 0
	integer PooledStringHandleForPlusInteger = 0
	integer PooledStringHandleForPlusReal = 0
	integer PooledStringHandleForSubchar = 0
	integer PooledStringHandleForMarshalStructure = 0
	integer PooledStringHandleForSizeOf = 0
	integer PooledStringHandleForCastBufferToString = 0
	integer PooledStringHandleForWidenFromBuffer = 0
	integer PooledStringHandleForBufferCopy = 0
	integer PooledStringHandleForInteger64 = 0
	integer PooledStringHandleForGCInit = 0
	integer PooledStringhandleForGCCollectStrings = 0
	integer PooledStringHandleForReturn = 0

	integer FirstNonBuiltInStringHandle = 0

	ContextWrapper<Scope> GlobalScope = nothing
	ContextWrapper<Scope> EmittingScope = nothing

	integer CharacterCarriageReturn = subchar(unescape("\r"), 0)
	integer CharacterLineFeed = subchar(unescape("\n"), 0)
	integer CharacterTab = subchar(unescape("\t"), 0)
	integer CharacterQuote = subchar(unescape("\'"), 0)
	integer CharacterSlash = subchar("/", 0)
	integer CharacterSpace = subchar(" ", 0)

	integer CharacterA = subchar("a", 0)
	integer CharacterB = subchar("b", 0)
	integer CharacterC = subchar("c", 0)
	integer CharacterD = subchar("d", 0)
	integer CharacterE = subchar("e", 0)
	integer CharacterF = subchar("f", 0)
	integer CharacterX = subchar("x", 0)
	integer CharacterZero = subchar("0", 0)
	integer CharacterOne = subchar("1", 0)
	integer CharacterTwo = subchar("2", 0)
	integer CharacterThree = subchar("3", 0)
	integer CharacterFour = subchar("4", 0)
	integer CharacterFive = subchar("5", 0)
	integer CharacterSix = subchar("6", 0)
	integer CharacterSeven = subchar("7", 0)
	integer CharacterEight = subchar("8", 0)
	integer CharacterNine = subchar("9", 0)

	integer CharacterOpenBrace = subchar("{", 0)
	integer CharacterCloseBrace = subchar("}", 0)
	integer CharacterColon = subchar(":", 0)
	integer CharacterOpenParen = subchar("(", 0)
	integer CharacterCloseParen = subchar(")", 0)
	integer CharacterEquals = subchar("=", 0)
	integer CharacterAmpersand = subchar("&", 0)
	integer CharacterComma = subchar(",", 0)
	integer CharacterPlus = subchar("+", 0)
	integer CharacterMinus = subchar("-", 0)
	integer CharacterLessThan = subchar("<", 0)
	integer CharacterGreaterThan = subchar(">", 0)
	integer CharacterDot = subchar(".", 0)
	integer CharacterSemicolon = subchar(";", 0)
	integer CharacterExclamation = subchar("!", 0)
	integer CharacterOpenBracket = subchar("[", 0)
	integer CharacterCloseBracket = subchar("]", 0)

	list<FunctionDefinition> PendingInferenceFunctions = dummyfunc, nothing

	BinaryTreeRoot<integer> TypeToNameMap = nothing
	BinaryTreeRoot<integer> NameToTypeMap = nothing


	simplelist<boolean> StupidHack = false, nothing


	ArrayType dummyarraytype = 0, 0, 0
	list<ArrayType> ArrayTypes = dummyarraytype, nothing
}
