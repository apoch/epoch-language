//
// Simple test of integration with BGFX library
//


structure WindowClass :
	integer Size,
	integer Style,
	(WindowProc : integer, integer, integer, integer -> integer),
	integer ClassExtra,
	integer WindowExtra,
	integer hInstance,
	integer hIcon,
	integer hCursor,
	integer hBackgroundBrush,
	string MenuName,
	string ClassName,
	integer hIconSmall


structure Point :
	integer x,
	integer y

structure Rect :
	integer left,
	integer top,
	integer right,
	integer bottom

structure MessageInfo :
	integer hwnd,
	integer message,
	integer wparam,
	integer lparam,
	integer time,
	Point point



CloseHandle : integer handle -> boolean ret = false [external("Kernel32.dll", "CloseHandle", "stdcall")]
GetModuleHandle : integer null -> integer handle = 0 [external("Kernel32.dll", "GetModuleHandleW", "stdcall")]
RegisterClassEx : WindowClass ref wc -> integer16 atom = 0 [external("User32.dll", "RegisterClassExW", "stdcall")]
CreateWindowEx : integer exstyle, string classname, string windowname, integer style, integer x, integer y, integer width, integer height, integer hwndparent, integer hmenu, integer hinstance, integer param -> integer windowhandle = 0 [external("User32.dll", "CreateWindowExW", "stdcall")]
ShowWindow : integer hwnd, integer cmdshow -> boolean success = false [external("User32.dll", "ShowWindow", "stdcall")]
GetMessage : MessageInfo ref msg, integer hwnd, integer filtermin, integer filtermax -> integer result = 0 [external("User32.dll", "GetMessageW", "stdcall")]
TranslateMessage : MessageInfo ref msg -> boolean success = false [external("User32.dll", "TranslateMessage", "stdcall")]
DispatchMessage : MessageInfo ref msg -> integer unused = 0 [external("User32.dll", "DispatchMessageW", "stdcall")]
PostQuitMessage : integer exitcode [external("User32.dll", "PostQuitMessage", "stdcall")]
DefWindowProc : integer hwnd, integer msg, integer wparam, integer lparam -> integer ret = 0 [external("User32.dll", "DefWindowProcW", "stdcall")]

GetParent : integer hwnd -> integer parenthwnd = 0 [external("User32.dll", "GetParent", "stdcall")]

SendMessage : integer hwnd, integer message, integer wparam, integer lparam -> integer ret = 0 [external("User32.dll", "SendMessageW", "stdcall")]
//SendMessage : integer hwnd, integer message, integer wparam, string lparam -> integer ret = 0 [external("User32.dll", "SendMessageW", "stdcall")]

//DestroyWindow : integer handle -> boolean ret = false [external("User32.dll", "DestroyWindow", "stdcall")]





entrypoint :
{
	//bgfxInit()
	//bgfxShutdown()


	integer WS_OVERLAPPEDWINDOW = 13565952
	integer CW_USEDEFAULT = -2147483648

	integer hInstance = GetModuleHandle(0)

	// TODO - sizeof(wc) instead of 60
	WindowClass wc = 60, 0, MainWindowProcedure, 0, 0, hInstance, 0, 0, 0, "", "EpochBGFXClass", 0
	integer16 fail = 0
	if(RegisterClassEx(wc) == fail)
	{
		print("FAILED TO REGISTER WINDOW CLASS")
		assert(false)
	}

	integer hwnd = CreateWindowEx(0, "EpochBGFXClass", "Epoch BGFX Demo", WS_OVERLAPPEDWINDOW + 0x02000000, CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, 0, 0, hInstance, 0)

	if(hwnd == 0)
	{
		print("FAILED TO CREATE WINDOW")
		assert(false)
	}

	ShowWindow(hwnd, 1)

	Point pt = 0, 0
	MessageInfo msg = 0, 0, 0, 0, 0, pt

	while(GetMessage(msg, 0, 0, 0) != 0)
	{		
		TranslateMessage(msg)
		DispatchMessage(msg)
	}
}


MainWindowProcedure : integer hwnd, integer message, integer wparam, integer lparam -> integer ret = 0
{
	integer WM_DESTROY = 2

	if(message == WM_DESTROY)
	{
		//PostQuitMessage(0)
	}
	else
	{
		//ret = DefWindowProc(hwnd, message, wparam, lparam)
	}
}



bgfxInit : [external("EpochBGFXWrapper.dll", "bgfxInit")]
//bgfxShutdown : [external("EpochBGFXWrapper.dll", "bgfxShutdown")]


