//
// Simple test of integration with BGFX library
//


structure OPAQUE :
	integer DummyHackField


structure WindowClass :
	integer Size,
	integer Style,
	(WindowProc : OPAQUE, integer, integer, integer -> integer),
	integer ClassExtra,
	integer WindowExtra,
	OPAQUE hInstance,
	OPAQUE hIcon,
	OPAQUE hCursor,
	OPAQUE hBackgroundBrush,
	string MenuName,
	string ClassName,
	OPAQUE hIconSmall


structure Point :
	integer x,
	integer y

structure Rect :
	integer left,
	integer top,
	integer right,
	integer bottom

structure MessageInfo :
	OPAQUE hwnd,
	integer message,
	integer wparam,
	integer lparam,
	integer time,
	Point point



CloseHandle : OPAQUE handle -> boolean ret = false [external("Kernel32.dll", "CloseHandle", "stdcall")]
GetModuleHandle : OPAQUE null -> OPAQUE handle = 0 [external("Kernel32.dll", "GetModuleHandleA", "stdcall")]
RegisterClassEx : WindowClass ref wc -> integer16 atom = 0 [external("User32.dll", "RegisterClassExA", "stdcall")]
CreateWindowEx : integer exstyle, string classname, string windowname, integer style, integer x, integer y, integer width, integer height, OPAQUE hwndparent, OPAQUE hmenu, OPAQUE hinstance, OPAQUE param -> OPAQUE windowhandle = 0 [external("User32.dll", "CreateWindowExA", "stdcall")]
ShowWindow : OPAQUE hwnd, integer cmdshow -> boolean success = false [external("User32.dll", "ShowWindow", "stdcall")]
GetMessage : MessageInfo ref msg, OPAQUE hwnd, integer filtermin, integer filtermax -> integer result = 0 [external("User32.dll", "GetMessageA", "stdcall")]
TranslateMessage : MessageInfo ref msg -> boolean success = false [external("User32.dll", "TranslateMessage", "stdcall")]
DispatchMessage : MessageInfo ref msg -> integer unused = 0 [external("User32.dll", "DispatchMessageA", "stdcall")]
PostQuitMessage : integer exitcode [external("User32.dll", "PostQuitMessage", "stdcall")]
DefWindowProc : OPAQUE hwnd, integer msg, integer wparam, integer lparam -> integer ret = 0 [external("User32.dll", "DefWindowProcA", "stdcall")]

GetParent : OPAQUE hwnd -> integer parenthwnd = 0 [external("User32.dll", "GetParent", "stdcall")]

SendMessage : OPAQUE hwnd, integer message, integer wparam, integer lparam -> integer ret = 0 [external("User32.dll", "SendMessageA", "stdcall")]
//SendMessage : integer hwnd, integer message, integer wparam, string lparam -> integer ret = 0 [external("User32.dll", "SendMessageA", "stdcall")]

//DestroyWindow : integer handle -> boolean ret = false [external("User32.dll", "DestroyWindow", "stdcall")]


MessageBox : OPAQUE hwnd, string message, string title, integer style -> integer ret = 0 [external("User32.dll", "MessageBoxA", "stdcall")]


entrypoint :
{
	integer WS_OVERLAPPEDWINDOW = 13565952
	integer CW_USEDEFAULT = -2147483648

	OPAQUE nullopaque = 0
	OPAQUE hInstance = GetModuleHandle(nullopaque)

	// TODO - sizeof(wc) instead of magic number
	WindowClass wc = 80, 0, MainWindowProcedure, 0, 0, hInstance, nullopaque, nullopaque, nullopaque, "", "EpochBGFXClass", nullopaque
	integer16 fail = 0
	if(RegisterClassEx(wc) == fail)
	{
		print("FAILED TO REGISTER WINDOW CLASS")
		assert(false)
	}

	OPAQUE hwnd = CreateWindowEx(0, "EpochBGFXClass", "Epoch BGFX Demo", WS_OVERLAPPEDWINDOW + 0x02000000, CW_USEDEFAULT, 0, CW_USEDEFAULT, 0, nullopaque, nullopaque, hInstance, nullopaque)
	ShowWindow(hwnd, 1)

	bgfxInit(hwnd)

	Point pt = 0, 0
	MessageInfo msg = nullopaque, 0, 0, 0, 0, pt

	while(GetMessage(msg, nullopaque, 0, 0) != 0)
	{		
		bgfxFrame()

		TranslateMessage(msg)
		DispatchMessage(msg)
	}

	bgfxShutdown()
}


MainWindowProcedure : OPAQUE hwnd, integer message, integer wparam, integer lparam -> integer ret = 0
{
	integer WM_DESTROY = 2

	if(message == WM_DESTROY)
	{
		PostQuitMessage(0)
	}
	else
	{
		ret = DefWindowProc(hwnd, message, wparam, lparam)
	}
}



bgfxInit : OPAQUE hwnd [external("EpochBGFXWrapper.dll", "bgfxInit")]
bgfxShutdown : [external("EpochBGFXWrapper.dll", "bgfxShutdown")]
bgfxFrame : [external("EpochBGFXWrapper.dll", "bgfxFrame")]


