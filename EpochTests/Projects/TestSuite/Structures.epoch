//
// STRUCTURES.EPOCH
//
// Test suite for structure data types
//


TestStructures :
{
	TestSection("Structures")
	
	
	TSAlloc()
	TSMultipleMembers()
	TSNested()
	TSAnonymous()
	TSCustomConstructor()
	TSCopyConstructor()
	
	TestSectionComplete()
}




structure StructureTest1 :
	integer field


structure StructureTest2 :
	integer alpha,
	integer beta,
	integer gamma
	
	
structure NestedStructure1 :
	StructureTest2 large,
	StructureTest1 small
	

TSAlloc :
{
	StructureTest1 test = 42
	
	TestAssert(test.field == 42, "structure initialization")
}


TSMultipleMembers :
{
	StructureTest2 test = 1, 2, 3
	
	TestAssert(test.alpha == 1, "structure member order 1")
	TestAssert(test.beta == 2, "structure member order 2")
	TestAssert(test.gamma == 3, "structure member order 3")
}

TSNested :
{
	StructureTest1 innersmall = 42
	StructureTest2 innerlarge = 1, 2, 3
	NestedStructure1 nested = innerlarge, innersmall
	
	TestAssert(nested.large.alpha == 1, "nested structure members 1")
	TestAssert(nested.large.beta == 2, "nested structure members 2")
	TestAssert(nested.large.gamma == 3, "nested structure members 3")
	TestAssert(nested.small.field == 42, "nested structure members 4")
}

TSAnonymous :
{
	TSAnonHelper(StructureTest1(666))
}

TSAnonHelper : StructureTest1 in
{
	TestAssert(in.field == 666, "anonymous structure creation")
}


StructureTest2 : integer mandatory -> StructureTest2 ret = mandatory, 0, -1 [constructor]

TSCustomConstructor :
{
	StructureTest2 test = 2
	
	TestAssert(test.alpha == 2, "custom constructor 1")
	TestAssert(test.beta == 0, "custom constructor 2")
	TestAssert(test.gamma == -1, "custom constructor 3")
}



TSCopyConstructor :
{
	StructureTest1 original = 666
	StructureTest1 copy = original
	
	TestAssert(original.field == copy.field, "copy constructor")
}



