//
// OPERATORS.EPOCH
//
// Unit test suite for operators
//


TestOperators :
{
	TestSection("Operators")

	TOBooleanNot()
	TOAssignments()
	
	TestSectionComplete()
}


TOReturnTrue : -> true
TOReturnFalse : -> false


TOBooleanNot : 
{
	TestAssert(TOReturnTrue(), "operatorless boolean return")
	TestAssert(!TOReturnFalse(), "boolean operator applied to function")
	TestAssert(!!TOReturnTrue(), "repeated boolean operator")
	TestAssert(!!!TOReturnFalse(), "triple repeated boolean operator")
}



structure AssignmentTest1 :
	integer alpha,
	integer beta

TOAssignments :
{
	integer foo = 42
	TestAssert(foo == 42, "assignment operator precondition")
	foo = 666
	TestAssert(foo == 666, "assignment operator postcondition")
	
	integer bar = 1
	TestAssert(bar == 1, "chained assignment precondition")
	bar = foo = 3
	TestAssert(foo == 3, "chained assignment postcondition 1")
	TestAssert(bar == 3, "chained assignment postcondition 2")

	integer baz = 2
	TestAssert(baz == 2, "deep chained assignment precondition")
	bar = baz = foo = 4
	TestAssert(foo == 4, "deep chained assignment postcondition 1")
	TestAssert(bar == 4, "deep chained assignment postcondition 2")
	TestAssert(baz == 4, "deep chained assignment postcondition 3")
	
	AssignmentTest1 struct = 1, 2
	TestAssert(struct.alpha == 1, "structure member assignment precondition 1")
	TestAssert(struct.beta == 2, "structure member assignment precondition 2")
	
	struct.alpha = 666
	struct.beta = 42
	
	TestAssert(struct.alpha == 666, "structure member assignment postcondition 1")
	TestAssert(struct.beta == 42, "structure member assignment postcondition 2")
}
