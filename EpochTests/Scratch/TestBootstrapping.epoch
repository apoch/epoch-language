
global
{
	integer foo = add(40, 2)
}


add : integer a, integer b -> a + b


type simplelistnode<type T> : simplelist<T> | nothing

structure simplelist<type T> :
	T value,
	simplelistnode<T> next




entrypoint :
{
	if(foo == 42)
	{
		print("Happy!")
	}
	else
	{
		print("Sad.")
	}

	simplelist<string> test = "foo", nothing
	simple_append<string>(test, "bar")
	simple_append<string>(test, "baz")

	print("Done")
}





simple_append<type T> : simplelist<T> ref thelist, T value
{
	simple_append_recurse<T>(thelist, thelist.next, value)
}

simple_append_recurse<type T> : simplelist<T> ref thelist, nothing, T value
{
	simplelist<T> newlist = new value, nothing
	thelist.next = newlist
}

simple_append_recurse<type T> : simplelist<T> ref thelist, simplelist<T> ref tail, T value
{
	simple_append_recurse<T>(tail, tail.next, value)
}
